// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model country {
  country_id    Int       @id @default(autoincrement())
  name          String    @db.VarChar(40) @unique
  voivodeships  voivodeship[]
}

model voivodeship {
  voivodeship_id Int       @id @default(autoincrement())
  name            String    @db.VarChar(40) @unique
  country_id      Int
  country         country   @relation(fields: [country_id], references: [country_id])
  cities          city[]
}

model city {
  city_id         Int       @id @default(autoincrement())
  name            String    @db.VarChar(255)
  voivodeship_id  Int
  voivodeship     voivodeship @relation(fields: [voivodeship_id], references: [voivodeship_id])
  addresses       address[]
}

model role {
  role_id Int    @id @default(autoincrement())
  name    String @db.VarChar(255) @unique
  users   user[]
}

model user {
  user_id       Int       @id @default(autoincrement())
  email         String    @db.VarChar(40) @unique
  password_hash String    @db.VarChar(255)
  name          String    @db.VarChar(40)
  surname       String    @db.VarChar(40)
  phone         String    @db.VarChar(15) @unique
  role_id       Int
  role          role      @relation(fields: [role_id], references: [role_id])
  bookings      booking[]
  restaurant_managers restaurant_manager[]
  sessions session[]
}

model menu {
  menu_id     Int       @id @default(autoincrement())
  url         String    @db.VarChar(255)
  restaurants restaurant[]
}

model foodtype {
  foodtype_id   Int       @id @default(autoincrement())
  name          String    @db.VarChar(40) @unique
  restaurants   restaurant[]
}

model address {
  address_id     Int       @id @default(autoincrement())
  city_id        Int
  street_name    String    @db.VarChar(40)
  building_number String   @db.VarChar(40)
  zip_code       String    @db.VarChar(6)
  city           city      @relation(fields: [city_id], references: [city_id])
  restaurants    restaurant[]
}

model restaurant {
  restaurant_id Int       @id @default(autoincrement())
  name          String    @db.VarChar(40)
  description   String
  menu_id       Int
  foodtype_id   Int
  address_id    Int
  image         String    @db.VarChar(255)
  table_map     Json?
  menu          menu      @relation(fields: [menu_id], references: [menu_id])
  foodtype      foodtype  @relation(fields: [foodtype_id], references: [foodtype_id])
  address       address   @relation(fields: [address_id], references: [address_id])
  tables        table[]
  restaurant_managers restaurant_manager[]
}

model restaurant_manager {
  restaurant_manager_id Int       @id @default(autoincrement())
  restaurant_id Int
  user_id       Int
  restaurant    restaurant @relation(fields: [restaurant_id], references: [restaurant_id])
  user          user @relation(fields: [user_id], references: [user_id])
}

model table {
  table_id           Int      @id @default(autoincrement())
  restaurant_id      Int
  table_name         String   @db.VarChar(30)
  description        String   @db.VarChar(255)
  max_clients_number Int
  restaurant         restaurant @relation(fields: [restaurant_id], references: [restaurant_id], onDelete: Cascade)
  bookings           booking[]
}

model booking {
  booking_id Int      @id @default(autoincrement())
  user_id    Int
  table_id   Int
  datetime   DateTime
  user       user @relation(fields: [user_id], references: [user_id])
  table      table @relation(fields: [table_id], references: [table_id])
}

model session {
  session_id String @id
  user_id Int
  validUntil DateTime
  user user @relation(fields: [user_id], references: [user_id])
}